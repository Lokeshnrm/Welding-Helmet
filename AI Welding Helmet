import cv2
import numpy as np

# Load pre-trained deep learning model (replace with your model)
net = cv2.dnn.readNet("yolov3.weights", "yolov3.cfg")
classes = []
with open("coco.names", "r") as f:
    classes = [line.strip() for line in f.readlines()]

# Load video capture (replace with your camera source)
cap = cv2.VideoCapture(0)

while True:
    ret, frame = cap.read()
    
    # Detect objects using YOLO
    height, width, _ = frame.shape
    blob = cv2.dnn.blobFromImage(frame, 0.00392, (416, 416), (0, 0, 0), True, crop=False)
    net.setInput(blob)
    outs = net.forward(net.getUnconnectedOutLayersNames())

    # Process YOLO output
    class_ids = []
    confidences = []
    boxes = []
    for out in outs:
        for detection in out:
            scores = detection[5:]
            class_id = np.argmax(scores)
            confidence = scores[class_id]
            if confidence > 0.5 and class_id == 63:  # Check for welding arc class (adjust as needed)
                # Welding arc detected
                # Implement actions like darkening the helmet or triggering a response
                print("Welding arc detected!")

    # Display the frame
    cv2.imshow("Welding Helmet", frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
